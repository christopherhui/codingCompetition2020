You have an array of data entries. Each data entry is a space delimited string of words.

For each data entry, the first word in each data entry is an alphanumeric index. No index is the same. Then, either:

1) Each word after the index will consist only of lowercase letters (a-z), OR
2) Each word after the index will consist only of digits (0-9).
We will call these two varieties of data entries letter-entries and digit-entries.  It is guaranteed that each data entry has at least one word after its index.

Reorder the data entries so that all letter-entries come before any digit-entries.  The letter-entries are ordered lexicographically ignoring index, with the index used in case of ties.  The digit-entries should be put in their original order.

Return the final order of the data entries.

Constraints:
0 <= entries.length <= 100
3 <= entries[i].length <= 100
Every entries[i] is guaranteed to have an index and a word after the index.

Input: array of strings
Output: array of strings

Example1:
Input: ["dig1 8 2 7 5","let1 art can","dig2 3 6","let2 own kit dung","let3 art zero"]
Output: ["let1 art can","let3 art zero","let2 own kit dung","dig1 8 2 7 5","dig2 3 6"]

Example2:
Input: ["month4 1 0 7","meow2 hello one","meow3 2","lemming1 hello one"]
Output: ["lemming1 hello one","meow2 hello one","month4 1 0 7","meow3 2"]
=================================================
Description: Split the word delimited by spaces, check if the second argument is a letter or digit. 
If it is a letter it goes first, otherwise it goes last. If both are not letters, check the index in where they are inserted.
If both are letters, take all letter entries and compare them (if exhausted, check last index to compare)
Use scanner, an empty space means EOF